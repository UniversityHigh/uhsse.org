-
	const isEmptyObject = object => Object.values(object).every(x => !x),
		isEmptyObjectArray = array => !array.length || isEmptyObject(array[0]),
		requireLocalImage = link => require(`../../media/${link.replace(/^\//, "")}`),
		linkRegex = /(https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|www\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9]\.[^\s]{2,}|www\.[a-zA-Z0-9]\.[^\s]{2,})/g,
		getChunks = (string, regex) => {
			const chunks = [];
			let fromIndex;
			while ((match = regex.exec(string)) !== null) {
				if (match.index)
					chunks.push({
						match: false,
						value: string.substring(fromIndex || 0, match.index)
					});

				chunks.push({
					match: true,
					value: match[0]
				});

				fromIndex = match.index + match[0].length;
			}

			if (fromIndex !== string.length)
				chunks.push({
					match: false,
					value: string.substring(fromIndex, string.length)
				});

			return chunks;
		};

mixin title(title)
	title= `${title} | UHSSE`

mixin body(name, lead, image)
	+hero(name, lead, image)

	.container
		block

include ./hero.pug

mixin section(anchorId, name, lead)
	section.section(id=anchorId)
		if name
			h2.title.is-4.is-size-3-desktop= name
		if lead
			h3.subtitle.is-6.is-size-5-desktop= lead
		
		block

mixin table(headers)
	.table-scroll
		table.table.is-striped.is-narrow.is-hoverable.is-fullwidth
			if headers
				thead
					tr
						each header in headers
							th= header
				tbody
					block
			else
				block

mixin iframe(source, lazy)
	-
		const className = lazy ? "lozad" : null,
			src = lazy ? null : source,
			dataSrc = lazy ? source : null;

	iframe(class=className src=src data-src=dataSrc style="width: 100%;" height=500)
	if lazy
		noscript
			iframe(src=source style="width: 100%;" height=500)

include card.pug
include message.pug

mixin link(link, tab)
	a(href=link target=tab ? "_blank" : tab rel="noopener noreferrer")&attributes(attributes)
		block

mixin links(links, name)
	if !isEmptyObjectArray(links)
		.list.is-hoverable.is-scrollable
			each link in links
				+link(link.link, true)(class="list-item")
					= link.name
					if link.details
						small.is-size-7= ` (${link.details})`
	else
		+message(
			`There are no ${name || "links"} currently available. Check back later!`
		)(class="is-warning")

mixin linkify(string)
	each chunk in getChunks(string, linkRegex)
		if chunk.match
			- const link = chunk.value;
			+link(link.startsWith("www.") ? `//${link}` : link, true)= link
		else
			= chunk.value

include icon.pug