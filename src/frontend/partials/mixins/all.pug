-
	const isEmptyObject = object => Object.values(object).every(x => !x),
		isEmptyObjectArray = array => !array.length || isEmptyObject(array[0]),
		requireLocalImage = link => require(`../../media/${link}`),
		linkRegex = /(((https?:\/\/)|(www\.))[^\s]+)/g,
		getChunks = string => {
			const chunks = [];
			let fromIndex;
			while ((match = linkRegex.exec(string)) !== null) {
				if (match.index)
					chunks.push({
						isLink: false,
						value: string.substring(fromIndex || 0, match.index)
					});

				chunks.push({
					isLink: true,
					value: match[0]
				});

				fromIndex = match.index + match[0].length;
			}

			if (fromIndex !== string.length)
				chunks.push({
					isLink: false,
					value: string.substring(fromIndex, string.length)
				});

			return chunks;
		};

mixin title(title)
	title= `${title} | UHSSE`

mixin body(name, lead, image)
	+hero(image)
		+hero-body(name, lead)

	.container
		block

include ./hero.pug

mixin section(anchorId, name, lead)
	section.section(id=anchorId)
		if name
			h2.title.is-4.is-size-3-desktop= name
		if lead
			h3.subtitle.is-6.is-size-5-desktop= lead
		
		block

mixin table(headers)
	.table-scroll
		table.table.is-striped.is-narrow.is-hoverable.is-fullwidth
			if headers
				thead
					tr
						each header in headers
							th= header
				tbody
					block
			else
				block

mixin iframe(source)
	iframe(src=source style="width: 100%;" height=500)

include card.pug
include message.pug

mixin link(link, tab)
	a(class!=attributes.class href=link target=tab ? "_blank" : tab rel="noopener noreferrer")
		block

mixin linkify(string)
	each chunk in getChunks(string)
		if chunk.isLink
			- const link = chunk.value;
			+link(link.startsWith("www.") ? `//${link}` : link, true)= link
		else
			= chunk.value

include icon.pug